name: Build Docker image

on:
  push:

jobs:
  versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.tags.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: tags
        with:
          result-encoding: string
          script: |
            const tags = (await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data.map((item) => item.name);
            return JSON.stringify(tags);

  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - versions
    strategy:
      matrix: 
        version: ${{ fromJSON(needs.versions.outputs.matrix) }}
      max-parallel: 2
      fail-fast: false
    steps:
      - name: Create Dockerfile
        run: echo "FROM ghcr.io/yano3/nginx-ngx_mruby:${{ matrix.version }}" > Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ghcr.io/pepabo/nginx-ngx_mruby:${{ matrix.version }}
